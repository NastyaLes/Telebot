import telebot
import sqlite3

from telebot import types

with open("token.txt", 'r', encoding="utf-8") as file:
    token = file.read()

bot = telebot.TeleBot(token)

username = None
fio_delete = None
fio_14 = None
tel_14 = None
address_14 = None
datetime_14 = None
reason = None
place = None
fio = None
date_of_birth = None
series_number = None
date_of_issue = None
who_issued = None
division_code = None
place_of_birth = None
country = None
tel = None
email = None
place_of_residence = None
date_of_registration = None
actual_housing = None
marital_status = None
father = None
mother = None
address = None

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    btn1 = types.KeyboardButton('/point1')
    btn2 = types.KeyboardButton('/point2')
    markup.row(btn1, btn2)
    btn3 = types.KeyboardButton('/point3')
    markup.row(btn3)
    bot.send_message(message.chat.id, '<strong>–£–∫–∞–∂–∏—Ç–µ, —Å –∫–∞–∫–æ–π —Ü–µ–ª—å—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:</strong>\n/point1 - –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ 14-–ª–µ—Ç–Ω–µ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞\n/point2 - –∑–∞–º–µ–Ω–∞ –ø–∞—Å–ø–æ—Ä—Ç–∞\n/point3 - –æ—Ç–º–µ–Ω–∞ –∑–∞—è–≤–∫–∏', parse_mode='html', reply_markup=markup)

@bot.message_handler(commands=['point1'])
def on_14(message):
    bot.send_message(message.chat.id, '–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞—Å–ø–æ—Ä—Ç–∞ –Ω—É–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∏–µ–º –≤ –ú–§–¶ –∏–ª–∏ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ú–í–î. –í –ú–§–¶ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –º–æ–∂–Ω–æ –Ω–µ –ø–æ–∑–¥–Ω–µ–µ 90 –¥–Ω–µ–π –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—É–ø–ª–µ–Ω–∏—è 14-–ª–µ—Ç–∏—è, –∏–Ω–∞—á–µ —Ç–æ–ª—å–∫–æ –≤ –ú–í–î')
    bot.send_message(message.chat.id, '–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –ø—Ä–∏–µ–º –≤–∞–º –Ω—É–∂–Ω–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ')
    conn = sqlite3.connect('the_first_passport.sql')
    cur = conn.cursor()
    cur.execute('CREATE TABLE IF NOT EXISTS users_first (id int auto_increment primary key, username varchar(50), fio varchar(150), tel varchar(30), address varchar(200), data_vremya datetime)')
    conn.commit()
    cur.close()
    conn.close()
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –ø–æ–ª–Ω–æ–µ –§–ò–û')
    bot.register_next_step_handler(message, on_fio_14)

def on_fio_14(message):
    global fio_14
    fio_14 = message.text.strip()
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏')
    bot.register_next_step_handler(message, on_tel_14)

def on_tel_14(message):
    global tel_14
    tel_14 = message.text.strip()
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç —Å –∞–¥—Ä–µ—Å–∞–º–∏ –ú–§–¶', url='https://–º–æ–∏–¥–æ–∫—É–º–µ–Ω—Ç—ã.—Ä—Ñ/search/mfc'))
    markup.add(types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç —Å –∞–¥—Ä–µ—Å–∞–º–∏ –ú–í–î', url='https://–º–≤–¥.—Ä—Ñ/contacts/sites'))
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –Ω—É–∂–Ω–æ–≥–æ –≤–∞–º –ú–§–¶ –∏–ª–∏ –ú–í–î (–∞–¥—Ä–µ—Å–∞ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ —Å—Å—ã–ª–∫–∞–º –Ω–∏–∂–µ)', reply_markup=markup)
    bot.register_next_step_handler(message, on_address_14)

def on_address_14(message):
    global address_14
    address_14 = message.text.strip()
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ: –ì–ì–ì–ì-–ú–ú-–î–î –ß–ß:–ú–ú:–°–°')
    bot.register_next_step_handler(message, on_datetime_14)

def on_datetime_14(message):
    global datetime_14
    datetime_14 = message.text.strip()
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    btn1 = types.KeyboardButton('–î–∞')
    btn2 = types.KeyboardButton('–ù–µ—Ç')
    markup.row(btn1, btn2)
    bot.send_message(message.chat.id, '–í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –∑–∞–ø–∏—Å—å?', reply_markup=markup)
    bot.register_next_step_handler(message, on_confirmation_14)

def on_confirmation_14(message):
    global username
    username = message.from_user.username
    if message.text == '–î–∞':
        bot.send_message(message.chat.id, '–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞! –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç –∑–∞—è–≤–∫—É –∏ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è')
        bot.send_message(message.chat.id, '<strong>–ù–∞ –ø—Ä–∏–µ–º –≤–æ–∑—å–º–∏—Ç–µ —Å —Å–æ–±–æ–π:</strong>\nüîπ–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ —Ä–æ–∂–¥–µ–Ω–∏–∏\nüîπ–î–æ–∫—É–º–µ–Ω—Ç, —É–¥–æ—Å—Ç–æ–≤–µ—Ä—è—é—â–∏–π –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ –†–§, –µ—Å–ª–∏ –Ω–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –æ—Ç–º–µ—Ç–∫–∏ –≤ —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–µ –æ —Ä–æ–∂–¥–µ–Ω–∏–∏\n' +
        'üîπ–î–≤–∞ —á—ë—Ä–Ω–æ-–±–µ–ª—ã—Ö –∏–ª–∏ —Ü–≤–µ—Ç–Ω—ã—Ö —Ñ–æ—Ç–æ —Ä–∞–∑–º–µ—Ä–æ–º 35√ó45 –º–º\nüîπ–ö–≤–∏—Ç–∞–Ω—Ü–∏—è –æ–± —É–ø–ª–∞—Ç–µ –≥–æ—Å–ø–æ—à–ª–∏–Ω—ã –≤ —Ä–∞–∑–º–µ—Ä–µ 300 ‚ÇΩ. –û–ø–ª–∞—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞, –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –∫–≤–∏—Ç–∞–Ω—Ü–∏—é ‚Äî –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ',
        parse_mode='html')
        conn = sqlite3.connect('the_first_passport.sql')
        cur = conn.cursor()
        cur.execute(f"INSERT INTO users_first (username, fio, tel, address, data_vremya) VALUES ('%s', '%s', '%s', '%s', '%s')" % (username, fio_14, tel_14, address_14, datetime_14))
        conn.commit()
        cur.close()
        conn.close()
        bot.stop_bot()
    elif message.text == '–ù–µ—Ç':
        bot.send_message(message.chat.id, '–ó–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞! –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –∫ –Ω–∞–º')
        bot.stop_bot()

@bot.message_handler(commands=['point3'])
def on_delete(message):
    conn = sqlite3.connect('cancellation_sheet.sql')
    cur = conn.cursor()
    cur.execute('CREATE TABLE IF NOT EXISTS users_del (id int auto_increment primary key, username varchar(50), fio varchar(150))')
    conn.commit()
    cur.close()
    conn.close()
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –§–ò–û, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —É–∫–∞–∑—ã–≤–∞–ª–∏ –ø—Ä–∏ –∑–∞—è–≤–∫–µ')
    bot.register_next_step_handler(message, on_fio_delete)

def on_fio_delete(message):
    global fio_delete, username
    fio_delete = message.text.strip()
    username = message.from_user.username
    conn = sqlite3.connect('cancellation_sheet.sql')
    cur = conn.cursor()
    cur.execute(f"INSERT INTO users_del (username, fio) VALUES ('%s', '%s')" % (username, fio_delete))
    conn.commit()
    cur.close()
    conn.close()
    bot.send_message(message.chat.id, '–ü—Ä–∏–Ω—è—Ç–æ! –í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä')
    bot.stop_bot()

@bot.message_handler(commands=['admin'])
def administrator(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å')
    bot.register_next_step_handler(message, on_password)

def on_password(message):
    if message.text != '111':
        bot.send_message(message.chat.id, '–ü–∞—Ä–æ–ª—å –Ω–µ–≤–µ—Ä–Ω—ã–π, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
        bot.register_next_step_handler(message, on_password)
    else:
        bot.send_message(message.chat.id, f'–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {message.from_user.first_name}!')
        markup = types.ReplyKeyboardMarkup()
        markup.add(types.KeyboardButton('–ó–∞—è–≤–∫–∏ –Ω–∞ –ø–µ—Ä–≤–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Å–ø–æ—Ä—Ç–∞'))
        markup.add(types.KeyboardButton('–ó–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Å–ø–æ—Ä—Ç–∞'))
        markup.add(types.KeyboardButton('–ó–∞—è–≤–∫–∏ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ'))
        bot.send_message(message.chat.id, '–°–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', reply_markup=markup)
        bot.register_next_step_handler(message, on_results)

def on_results(message):
    if message.text == '–ó–∞—è–≤–∫–∏ –Ω–∞ –ø–µ—Ä–≤–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Å–ø–æ—Ä—Ç–∞':
        conn = sqlite3.connect('the_first_passport.sql')
        cur = conn.cursor()
        cur.execute('SELECT * FROM users_first')
        users_first = cur.fetchall()
        info1 = ''
        for us in users_first:
            info1 += f'–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {us[1]}, –§–ò–û: {us[2]}, –¢–µ–ª–µ—Ñ–æ–Ω: {us[3]}, –ê–¥—Ä–µ—Å –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–ª–µ–Ω–∏—è: {us[4]}, –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –∑–∞–ø–∏—Å–∏: {us[5]}\n'
        cur.close()
        conn.close()
        bot.send_message(message.chat.id, info1)
    elif message.text == '–ó–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Å–ø–æ—Ä—Ç–∞':
        conn = sqlite3.connect('second_passport.sql')
        cur = conn.cursor()
        cur.execute('SELECT * FROM users_second')
        users_first = cur.fetchall()
        info2 = ''
        for us in users_first:
            info2 += f'–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {us[1]}, –ü—Ä–∏—á–∏–Ω–∞: {us[2]}, –ú–µ—Å—Ç–æ –ø–æ–ª—É—á–µ–Ω–∏—è: {us[3]}, –§–ò–û: {us[4]}, –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {us[5]}, –°–µ—Ä–∏—è –∏ –Ω–æ–º–µ—Ä: {us[6]}, –î–∞—Ç–∞ –≤—ã–¥–∞—á–∏: {us[7]}, –ö–µ–º –≤—ã–¥–∞–Ω: {us[8]}, –ö–æ–¥ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è: {us[9]}, –ú–µ—Å—Ç–æ —Ä–æ–∂–¥–µ–Ω–∏—è: {us[10]}, –°—Ç—Ä–∞–Ω–∞: {us[11]}, –¢–µ–ª–µ—Ñ–æ–Ω: {us[12]}, –ü–æ—á—Ç–∞: {us[13]}, –ú–µ—Å—Ç–æ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞: {us[14]}, –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {us[15]}, –§–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏–µ: {us[16]}, –°—Ç–∞—Ç—É—Å: {us[17]}, –û—Ç–µ—Ü: {us[18]}, –ú–∞—Ç—å: {us[19]}, –ê–¥—Ä–µ—Å: {us[20]}\n'
        cur.close()
        conn.close()
        bot.send_message(message.chat.id, info2)
    elif message.text == '–ó–∞—è–≤–∫–∏ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ':
        conn = sqlite3.connect('cancellation_sheet.sql')
        cur = conn.cursor()
        cur.execute('SELECT * FROM users_del')
        users_delete = cur.fetchall()
        info3 = ''
        for us in users_delete:
            info3 += f'–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {us[1]}, –§–ò–û: {us[2]}\n'
        cur.close()
        conn.close()
        bot.send_message(message.chat.id, info3)
    bot.register_next_step_handler(message, on_results)

@bot.callback_query_handler(func=lambda ccall: True)
def call_point2(ccall):
    conn = sqlite3.connect('second_passport.sql')
    cur = conn.cursor()
    cur.execute('SELECT * FROM users_second')
    users_first = cur.fetchall()
    info2 = ''
    for us in users_first:
        info2 += f'–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {us[1]}, –ü—Ä–∏—á–∏–Ω–∞: {us[2]}, –ú–µ—Å—Ç–æ –ø–æ–ª—É—á–µ–Ω–∏—è: {us[3]}, –§–ò–û: {us[4]}, –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {us[5]}, –°–µ—Ä–∏—è –∏ –Ω–æ–º–µ—Ä: {us[6]}, –î–∞—Ç–∞ –≤—ã–¥–∞—á–∏: {us[7]}, –ö–µ–º –≤—ã–¥–∞–Ω: {us[8]}, –ö–æ–¥ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è: {us[9]}, –ú–µ—Å—Ç–æ —Ä–æ–∂–¥–µ–Ω–∏—è: {us[10]}, –°—Ç—Ä–∞–Ω–∞: {us[11]}, –¢–µ–ª–µ—Ñ–æ–Ω: {us[12]}, –ü–æ—á—Ç–∞: {us[13]}, –ú–µ—Å—Ç–æ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞: {us[14]}, –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {us[15]}, –§–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏–µ: {us[16]}, –°—Ç–∞—Ç—É—Å: {us[17]}, –û—Ç–µ—Ü: {us[18]}, –ú–∞—Ç—å: {us[19]}, –ê–¥—Ä–µ—Å: {us[20]}\n'
    cur.close()
    conn.close()
    bot.send_message(ccall.message.chat.id, info2)

@bot.message_handler(commands=['point2'])
def on_replacement(message):
    conn = sqlite3.connect('second_passport.sql')
    cur = conn.cursor()
    cur.execute('CREATE TABLE IF NOT EXISTS users_second (id int auto_increment primary key, username varchar(50), reason varchar(150), place varchar(100), fio varchar(150), data_birth date, ser_num varchar(15), data_issue date, who varchar(150), code varchar(10), place_birth varchar(50), country varchar(50), tel varchar(30), email varchar(100), place_res varchar(200), date_reg date, act_hous varchar(15), mar_status varchar(50), father varchar(150), mother varchar(150), adres varchar(150))')
    conn.commit()
    cur.close()
    conn.close()
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    btn1 = types.KeyboardButton('–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ 20 –∏–ª–∏ 45 –ª–µ—Ç')
    btn2 = types.KeyboardButton('–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–∞–º–∏–ª–∏–∏, –∏–º–µ–Ω–∏ –∏–ª–∏ –æ—Ç—á–µ—Å—Ç–≤–∞')
    markup.row(btn1, btn2)
    btn3 = types.KeyboardButton('–ù–µ–ø—Ä–∏–≥–æ–¥–Ω–æ—Å—Ç—å –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é')
    btn4 = types.KeyboardButton('–û—à–∏–±–∫–∞ –≤ –ø–∞—Å–ø–æ—Ä—Ç–µ')
    markup.row(btn3, btn4)
    btn5 = types.KeyboardButton('–ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–æ—Å—Ç–∏')
    btn6 = types.KeyboardButton('–ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞—Ç—ã –∏ –º–µ—Å—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è')
    markup.row(btn5, btn6)
    bot.send_message(message.chat.id, '–ü–æ –∫–∞–∫–æ–π –ø—Ä–∏—á–∏–Ω–µ –Ω—É–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å –ø–∞—Å–ø–æ—Ä—Ç?', reply_markup=markup)
    bot.register_next_step_handler(message, on_reason)

def on_reason(message):
    global reason
    reason = message.text.strip()
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    btn1 = types.KeyboardButton('–ü–æ –º–µ—Å—Ç—É –ø—Ä–æ–ø–∏—Å–∫–∏')
    btn2 = types.KeyboardButton('–ü–æ –º–µ—Å—Ç—É –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è –±–µ–∑ –ø—Ä–æ–ø–∏—Å–∫–∏')
    btn3 = types.KeyboardButton('–ü–æ –º–µ—Å—Ç—É –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏')
    markup.row(btn1, btn2, btn3)
    bot.send_message(message.chat.id, '<strong>–ü–æ–º–µ—Ç–∫–∞:</strong>\nüîπ–ü–æ –º–µ—Å—Ç—É –ø—Ä–æ–ø–∏—Å–∫–∏ ‚Äî –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏, –æ–±—Å–ª—É–∂–∏–≤–∞—é—â–µ–º –∞–¥—Ä–µ—Å, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –≠—Ç–æ—Ç –∞–¥—Ä–µ—Å —É–∫–∞–∑–∞–Ω –≤ —à—Ç–∞–º–ø–µ –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –ø–∞—Å–ø–æ—Ä—Ç–µ. –°—Ä–æ–∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–∞—Å–ø–æ—Ä—Ç–∞ 5 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π\n' +
                     'üîπ–ü–æ –º–µ—Å—Ç—É –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è –±–µ–∑ –ø—Ä–æ–ø–∏—Å–∫–∏ ‚Äî —Ç–∞–º, –≥–¥–µ –≤—ã —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ –∂–∏–≤—ë—Ç–µ, –Ω–æ –Ω–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –∏–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –í—ã–±–∏—Ä–∞–π—Ç–µ —ç—Ç–æ—Ç –≤–∞—Ä–∏–∞–Ω—Ç, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø–∞—Å–ø–æ—Ä—Ç –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏, –∫–æ—Ç–æ—Ä–æ–µ –±–ª–∏–∂–µ –∫ —Ä–∞–±–æ—Ç–µ, –≤ –¥—Ä—É–≥–æ–º –≥–æ—Ä–æ–¥–µ –∏–ª–∏ —Ä–µ–≥–∏–æ–Ω–µ. –°—Ä–æ–∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–∞—Å–ø–æ—Ä—Ç–∞ 5 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π\n' +
                     'üîπ–ü–æ –º–µ—Å—Ç—É –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ‚Äî –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏, –æ–±—Å–ª—É–∂–∏–≤–∞—é—â–µ–º –∞–¥—Ä–µ—Å, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è. –°—Ä–æ–∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–∞—Å–ø–æ—Ä—Ç–∞ 5 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π\n',
                     parse_mode='html')
    bot.send_message(message.chat.id, '–ì–¥–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø–∞—Å–ø–æ—Ä—Ç?', reply_markup=markup)
    bot.register_next_step_handler(message, on_place)

def on_place(message):
    global place
    place = message.text.strip()
    bot.send_message(message.chat.id, '–û—Ç–∫—Ä–æ–π—Ç–µ –ø–∞—Å–ø–æ—Ä—Ç –∏ –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ —Å–µ–π—á–∞—Å –ø–æ–ø—Ä–æ—Å—è—Ç —É–∫–∞–∑–∞—Ç—å')
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é, –∏–º—è –∏ –æ—Ç—á–µ—Å—Ç–≤–æ')
    bot.register_next_step_handler(message, on_fio)

def on_fio(message):
    global fio
    fio = message.text.strip()
    bot.send_message(chat_id='-967051920', text=fio)
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ: –ì–ì–ì–ì-–ú–ú-–î–î')
    bot.register_next_step_handler(message, on_date_of_birth)

def on_date_of_birth(message):
    global date_of_birth
    date_of_birth = message.text.strip()
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å–µ—Ä–∏—é –∏ –Ω–æ–º–µ—Ä')
    bot.register_next_step_handler(message, on_series_number)

def on_series_number(message):
    global series_number
    series_number = message.text.strip()
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤—ã–¥–∞—á–∏ –ø–∞—Å–ø–æ—Ä—Ç–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ: –ì–ì–ì–ì-–ú–ú-–î–î')
    bot.register_next_step_handler(message, on_date_of_issue)

def on_date_of_issue(message):
    global date_of_issue
    date_of_issue = message.text.strip()
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ, –∫–µ–º –≤—ã–¥–∞–Ω –ø–∞—Å–ø–æ—Ä—Ç')
    bot.register_next_step_handler(message, on_who_issued)

def on_who_issued(message):
    global who_issued
    who_issued = message.text.strip()
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è')
    bot.register_next_step_handler(message, on_division_code)

def on_division_code(message):
    global division_code
    division_code = message.text.strip()
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –º–µ—Å—Ç–æ —Ä–æ–∂–¥–µ–Ω–∏—è')
    bot.register_next_step_handler(message, on_place_of_birth)

def on_place_of_birth(message):
    global place_of_birth
    place_of_birth = message.text.strip()
    bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, –ø–µ—Ä–≤—ã–π —ç—Ç–∞–ø –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ! –ï—Å–ª–∏ –≤—ã –≥–¥–µ-—Ç–æ –æ—à–∏–±–ª–∏—Å—å, –Ω–∞–∂–º–∏—Ç–µ /point2 –∏ –≤–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∑–∞–Ω–æ–≤–æ. –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω—ã')
    bot.send_message(message.chat.id, '–ò–¥–µ–º –¥–∞–ª—å—à–µ.\n –í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É, —É–∫–∞–∑–∞–Ω–Ω—É—é –≤ –≤–∞—à–µ–º —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–µ –æ —Ä–æ–∂–¥–µ–Ω–∏–∏. –ï—Å–ª–∏ —Ä–æ–¥–∏–ª–∏—Å—å –≤ –æ–¥–Ω–æ–π –∏–∑ —Ä–µ—Å–ø—É–±–ª–∏–∫ –°–°–°–†, —É–∫–∞–∑—ã–≤–∞–π—Ç–µ –°–°–°–†')
    bot.register_next_step_handler(message, on_country)

def on_country(message):
    global country
    country = message.text.strip()
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω')
    bot.register_next_step_handler(message, on_tel)

def on_tel(message):
    global tel
    tel = message.text.strip()
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã')
    bot.register_next_step_handler(message, on_email)

def on_email(message):
    global email
    email = message.text.strip()
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(types.KeyboardButton('–ù–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏'))
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –º–µ—Å—Ç–∞ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞ (–ø—Ä–æ–ø–∏—Å–∫–∏). –ê–¥—Ä–µ—Å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω—É–∂–µ–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–ª–µ–Ω–∏—è', reply_markup=markup)
    bot.register_next_step_handler(message, on_place_of_residence)

def on_place_of_residence(message):
    global place_of_residence
    place_of_residence = message.text.strip()
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(types.KeyboardButton('–ù–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏'))
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –º–µ—Å—Ç–∞ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞ (–ø—Ä–æ–ø–∏—Å–∫–∏) –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ: –ì–ì–ì–ì-–ú–ú-–î–î. –î–∞—Ç—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –Ω–∞ —à—Ç–∞–º–ø–µ –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ —Å—Ç—Ä. 5-12 –ø–∞—Å–ø–æ—Ä—Ç–∞', reply_markup=markup)
    bot.register_next_step_handler(message, on_date_of_registration)

def on_date_of_registration(message):
    global date_of_registration
    date_of_registration = message.text.strip()
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è. –ê–¥—Ä–µ—Å —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è –Ω—É–∂–µ–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–ª–µ–Ω–∏—è')
    bot.register_next_step_handler(message, on_actual_housing)

def on_actual_housing(message):
    global actual_housing
    actual_housing = message.text.strip()
    bot.send_message(message.chat.id, '–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Ñ–æ—Ç–æ –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–ª–µ–Ω–∏—è')
    file = open('./photo1.png', 'rb')
    bot.send_photo(message.chat.id, file)
    file = open('./photo2.png', 'rb')
    bot.send_photo(message.chat.id, file)
    file = open('./photo3.png', 'rb')
    bot.send_photo(message.chat.id, file)
    file = open('./photo4.png', 'rb')
    bot.send_photo(message.chat.id, file)
    file = open('./photo5.png', 'rb')
    bot.send_photo(message.chat.id, file)
    bot.send_message(message.chat.id, '–§–æ—Ç–æ, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –≤–∞–º–∏ —Å–µ–π—á–∞—Å, –Ω–µ –±—É–¥–µ—Ç –≤ –ø–∞—Å–ø–æ—Ä—Ç–µ. –û–Ω–æ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –≤ –ª–∏—á–Ω–æ–º –¥–µ–ª–µ')
    bot.register_next_step_handler(message, on_photo)

@bot.message_handler(content_types=['photo'])
def on_photo(message):
    bot.forward_message(-967051920, message.chat.id, message.id)
    bot.reply_to(message, '–ü—Ä–∏–Ω—è—Ç–æ')
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    btn1 = types.KeyboardButton('–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –±—ã–ª–∞ –∑–∞–º—É–∂–µ–º/–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –±—ã–ª –∂–µ–Ω–∞—Ç')
    btn2 = types.KeyboardButton('–ó–∞–º—É–∂–µ–º/–ñ–µ–Ω–∞—Ç')
    markup.row(btn1, btn2)
    btn3 = types.KeyboardButton('–†–∞–∑–≤–µ–¥–µ–Ω–∞/–†–∞–∑–≤–µ–¥–µ–Ω')
    btn4 = types.KeyboardButton('–í–¥–æ–≤–∞/–í–¥–æ–≤–µ–¥')
    markup.row(btn3, btn4)
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–µ–º–µ–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ', reply_markup=markup)
    bot.register_next_step_handler(message, on_marital_status)

def on_marital_status(message):
    global marital_status
    marital_status = message.text.strip()
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(types.KeyboardButton('–ù–µ—Ç —Å–≤–µ–¥–µ–Ω–∏–π –æ–± –æ—Ç—Ü–µ'))
    bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ —Å–≤–µ–¥–µ–Ω–∏—è –æ —Ä–æ–¥–∏—Ç–µ–ª—è—Ö, –∫–∞–∫ –≤ –≤–∞—à–µ–º —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–µ –æ —Ä–æ–∂–¥–µ–Ω–∏–∏')
    bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ —Å–≤–µ–¥–µ–Ω–∏—è –æ –æ–± –æ—Ç—Ü–µ', reply_markup=markup)
    bot.register_next_step_handler(message, on_father)

def on_father(message):
    global father
    father = message.text.strip()
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(types.KeyboardButton('–ù–µ—Ç —Å–≤–µ–¥–µ–Ω–∏–π –æ –º–∞—Ç–µ—Ä–∏'))
    bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ —Å–≤–µ–¥–µ–Ω–∏—è –æ –º–∞—Ç–µ—Ä–∏', reply_markup=markup)
    bot.register_next_step_handler(message, on_mother)

def on_mother(message):
    global mother
    mother = message.text.strip()
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç —Å –∞–¥—Ä–µ—Å–∞–º–∏ –ú–§–¶', url='https://–º–æ–∏–¥–æ–∫—É–º–µ–Ω—Ç—ã.—Ä—Ñ/search/mfc'))
    markup.add(types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç —Å –∞–¥—Ä–µ—Å–∞–º–∏ –ú–í–î', url='https://–º–≤–¥.—Ä—Ñ/contacts/sites'))
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –Ω—É–∂–Ω–æ–≥–æ –≤–∞–º –ú–§–¶ –∏–ª–∏ –ú–í–î (–∞–¥—Ä–µ—Å–∞ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ —Å—Å—ã–ª–∫–∞–º –Ω–∏–∂–µ)', reply_markup=markup)
    bot.register_next_step_handler(message, on_end)

def on_end(message):
    global address
    address = message.text.strip()
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    btn1 = types.KeyboardButton('–î–∞')
    btn2 = types.KeyboardButton('–ù–µ—Ç')
    markup.row(btn1, btn2)
    bot.send_message(message.chat.id, '–í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –∑–∞–ø–∏—Å—å?', reply_markup=markup)
    bot.register_next_step_handler(message, on_confirmation)

def on_confirmation(message):
    global username
    username = message.from_user.username
    if message.text == '–î–∞':
        bot.send_message(message.chat.id, '–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞! –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç –∑–∞—è–≤–∫—É –∏ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–∏–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç')
        conn = sqlite3.connect('second_passport.sql')
        cur = conn.cursor()
        cur.execute(f"INSERT INTO users_second (username, reason, place, fio, data_birth, ser_num, data_issue, who, code, place_birth, country, tel, email, place_res, date_reg, act_hous, mar_status, father, mother, adres) VALUES ('%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s')" % (username, reason, place, fio, date_of_birth, series_number, date_of_issue, who_issued, division_code, place_of_birth, country, tel, email, place_of_residence, date_of_registration, actual_housing, marital_status, father, mother, address))
        conn.commit()
        cur.close()
        conn.close()
        bot.stop_bot()
    elif message.text == '–ù–µ—Ç':
        bot.send_message(message.chat.id, '–ó–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞! –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –∫ –Ω–∞–º')
        bot.stop_bot()

bot.polling(none_stop=True)